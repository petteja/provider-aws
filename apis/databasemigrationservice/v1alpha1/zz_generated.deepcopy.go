// +build !ignore_autogenerated

/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountQuota) DeepCopyInto(out *AccountQuota) {
	*out = *in
	if in.AccountQuotaName != nil {
		in, out := &in.AccountQuotaName, &out.AccountQuotaName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountQuota.
func (in *AccountQuota) DeepCopy() *AccountQuota {
	if in == nil {
		return nil
	}
	out := new(AccountQuota)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityZone) DeepCopyInto(out *AvailabilityZone) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityZone.
func (in *AvailabilityZone) DeepCopy() *AvailabilityZone {
	if in == nil {
		return nil
	}
	out := new(AvailabilityZone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Certificate) DeepCopyInto(out *Certificate) {
	*out = *in
	if in.CertificateARN != nil {
		in, out := &in.CertificateARN, &out.CertificateARN
		*out = new(string)
		**out = **in
	}
	if in.CertificateIdentifier != nil {
		in, out := &in.CertificateIdentifier, &out.CertificateIdentifier
		*out = new(string)
		**out = **in
	}
	if in.CertificateOwner != nil {
		in, out := &in.CertificateOwner, &out.CertificateOwner
		*out = new(string)
		**out = **in
	}
	if in.CertificatePem != nil {
		in, out := &in.CertificatePem, &out.CertificatePem
		*out = new(string)
		**out = **in
	}
	if in.KeyLength != nil {
		in, out := &in.KeyLength, &out.KeyLength
		*out = new(int64)
		**out = **in
	}
	if in.SigningAlgorithm != nil {
		in, out := &in.SigningAlgorithm, &out.SigningAlgorithm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Certificate.
func (in *Certificate) DeepCopy() *Certificate {
	if in == nil {
		return nil
	}
	out := new(Certificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Connection) DeepCopyInto(out *Connection) {
	*out = *in
	if in.EndpointARN != nil {
		in, out := &in.EndpointARN, &out.EndpointARN
		*out = new(string)
		**out = **in
	}
	if in.EndpointIdentifier != nil {
		in, out := &in.EndpointIdentifier, &out.EndpointIdentifier
		*out = new(string)
		**out = **in
	}
	if in.LastFailureMessage != nil {
		in, out := &in.LastFailureMessage, &out.LastFailureMessage
		*out = new(string)
		**out = **in
	}
	if in.ReplicationInstanceARN != nil {
		in, out := &in.ReplicationInstanceARN, &out.ReplicationInstanceARN
		*out = new(string)
		**out = **in
	}
	if in.ReplicationInstanceIdentifier != nil {
		in, out := &in.ReplicationInstanceIdentifier, &out.ReplicationInstanceIdentifier
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Connection.
func (in *Connection) DeepCopy() *Connection {
	if in == nil {
		return nil
	}
	out := new(Connection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomEndpointParameters) DeepCopyInto(out *CustomEndpointParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomEndpointParameters.
func (in *CustomEndpointParameters) DeepCopy() *CustomEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(CustomEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomEventSubscriptionParameters) DeepCopyInto(out *CustomEventSubscriptionParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomEventSubscriptionParameters.
func (in *CustomEventSubscriptionParameters) DeepCopy() *CustomEventSubscriptionParameters {
	if in == nil {
		return nil
	}
	out := new(CustomEventSubscriptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomReplicationInstanceParameters) DeepCopyInto(out *CustomReplicationInstanceParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomReplicationInstanceParameters.
func (in *CustomReplicationInstanceParameters) DeepCopy() *CustomReplicationInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(CustomReplicationInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomReplicationSubnetGroupParameters) DeepCopyInto(out *CustomReplicationSubnetGroupParameters) {
	*out = *in
	if in.SubnetIDRefs != nil {
		in, out := &in.SubnetIDRefs, &out.SubnetIDRefs
		*out = make([]v1.Reference, len(*in))
		copy(*out, *in)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomReplicationSubnetGroupParameters.
func (in *CustomReplicationSubnetGroupParameters) DeepCopy() *CustomReplicationSubnetGroupParameters {
	if in == nil {
		return nil
	}
	out := new(CustomReplicationSubnetGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomReplicationTaskParameters) DeepCopyInto(out *CustomReplicationTaskParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomReplicationTaskParameters.
func (in *CustomReplicationTaskParameters) DeepCopy() *CustomReplicationTaskParameters {
	if in == nil {
		return nil
	}
	out := new(CustomReplicationTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DmsTransferSettings) DeepCopyInto(out *DmsTransferSettings) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccessRoleARN != nil {
		in, out := &in.ServiceAccessRoleARN, &out.ServiceAccessRoleARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DmsTransferSettings.
func (in *DmsTransferSettings) DeepCopy() *DmsTransferSettings {
	if in == nil {
		return nil
	}
	out := new(DmsTransferSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocDBSettings) DeepCopyInto(out *DocDBSettings) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DocsToInvestigate != nil {
		in, out := &in.DocsToInvestigate, &out.DocsToInvestigate
		*out = new(int64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.SecretsManagerAccessRoleARN != nil {
		in, out := &in.SecretsManagerAccessRoleARN, &out.SecretsManagerAccessRoleARN
		*out = new(string)
		**out = **in
	}
	if in.SecretsManagerSecretID != nil {
		in, out := &in.SecretsManagerSecretID, &out.SecretsManagerSecretID
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocDBSettings.
func (in *DocDBSettings) DeepCopy() *DocDBSettings {
	if in == nil {
		return nil
	}
	out := new(DocDBSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamoDBSettings) DeepCopyInto(out *DynamoDBSettings) {
	*out = *in
	if in.ServiceAccessRoleARN != nil {
		in, out := &in.ServiceAccessRoleARN, &out.ServiceAccessRoleARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamoDBSettings.
func (in *DynamoDBSettings) DeepCopy() *DynamoDBSettings {
	if in == nil {
		return nil
	}
	out := new(DynamoDBSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchSettings) DeepCopyInto(out *ElasticsearchSettings) {
	*out = *in
	if in.EndpointURI != nil {
		in, out := &in.EndpointURI, &out.EndpointURI
		*out = new(string)
		**out = **in
	}
	if in.ErrorRetryDuration != nil {
		in, out := &in.ErrorRetryDuration, &out.ErrorRetryDuration
		*out = new(int64)
		**out = **in
	}
	if in.FullLoadErrorPercentage != nil {
		in, out := &in.FullLoadErrorPercentage, &out.FullLoadErrorPercentage
		*out = new(int64)
		**out = **in
	}
	if in.ServiceAccessRoleARN != nil {
		in, out := &in.ServiceAccessRoleARN, &out.ServiceAccessRoleARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchSettings.
func (in *ElasticsearchSettings) DeepCopy() *ElasticsearchSettings {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Endpoint) DeepCopyInto(out *Endpoint) {
	*out = *in
	if in.CertificateARN != nil {
		in, out := &in.CertificateARN, &out.CertificateARN
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.EndpointARN != nil {
		in, out := &in.EndpointARN, &out.EndpointARN
		*out = new(string)
		**out = **in
	}
	if in.EndpointIdentifier != nil {
		in, out := &in.EndpointIdentifier, &out.EndpointIdentifier
		*out = new(string)
		**out = **in
	}
	if in.EngineDisplayName != nil {
		in, out := &in.EngineDisplayName, &out.EngineDisplayName
		*out = new(string)
		**out = **in
	}
	if in.EngineName != nil {
		in, out := &in.EngineName, &out.EngineName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.ExternalTableDefinition != nil {
		in, out := &in.ExternalTableDefinition, &out.ExternalTableDefinition
		*out = new(string)
		**out = **in
	}
	if in.ExtraConnectionAttributes != nil {
		in, out := &in.ExtraConnectionAttributes, &out.ExtraConnectionAttributes
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccessRoleARN != nil {
		in, out := &in.ServiceAccessRoleARN, &out.ServiceAccessRoleARN
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Endpoint.
func (in *Endpoint) DeepCopy() *Endpoint {
	if in == nil {
		return nil
	}
	out := new(Endpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Event) DeepCopyInto(out *Event) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.SourceIdentifier != nil {
		in, out := &in.SourceIdentifier, &out.SourceIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Event.
func (in *Event) DeepCopy() *Event {
	if in == nil {
		return nil
	}
	out := new(Event)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventCategoryGroup) DeepCopyInto(out *EventCategoryGroup) {
	*out = *in
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventCategoryGroup.
func (in *EventCategoryGroup) DeepCopy() *EventCategoryGroup {
	if in == nil {
		return nil
	}
	out := new(EventCategoryGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSubscription) DeepCopyInto(out *EventSubscription) {
	*out = *in
	if in.CustSubscriptionID != nil {
		in, out := &in.CustSubscriptionID, &out.CustSubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.CustomerAWSID != nil {
		in, out := &in.CustomerAWSID, &out.CustomerAWSID
		*out = new(string)
		**out = **in
	}
	if in.SnsTopicARN != nil {
		in, out := &in.SnsTopicARN, &out.SnsTopicARN
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionCreationTime != nil {
		in, out := &in.SubscriptionCreationTime, &out.SubscriptionCreationTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSubscription.
func (in *EventSubscription) DeepCopy() *EventSubscription {
	if in == nil {
		return nil
	}
	out := new(EventSubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Filter) DeepCopyInto(out *Filter) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Filter.
func (in *Filter) DeepCopy() *Filter {
	if in == nil {
		return nil
	}
	out := new(Filter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IBMDB2Settings) DeepCopyInto(out *IBMDB2Settings) {
	*out = *in
	if in.CurrentLsn != nil {
		in, out := &in.CurrentLsn, &out.CurrentLsn
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.MaxKBytesPerRead != nil {
		in, out := &in.MaxKBytesPerRead, &out.MaxKBytesPerRead
		*out = new(int64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.SecretsManagerAccessRoleARN != nil {
		in, out := &in.SecretsManagerAccessRoleARN, &out.SecretsManagerAccessRoleARN
		*out = new(string)
		**out = **in
	}
	if in.SecretsManagerSecretID != nil {
		in, out := &in.SecretsManagerSecretID, &out.SecretsManagerSecretID
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IBMDB2Settings.
func (in *IBMDB2Settings) DeepCopy() *IBMDB2Settings {
	if in == nil {
		return nil
	}
	out := new(IBMDB2Settings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaSettings) DeepCopyInto(out *KafkaSettings) {
	*out = *in
	if in.Broker != nil {
		in, out := &in.Broker, &out.Broker
		*out = new(string)
		**out = **in
	}
	if in.MessageMaxBytes != nil {
		in, out := &in.MessageMaxBytes, &out.MessageMaxBytes
		*out = new(int64)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaSettings.
func (in *KafkaSettings) DeepCopy() *KafkaSettings {
	if in == nil {
		return nil
	}
	out := new(KafkaSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KinesisSettings) DeepCopyInto(out *KinesisSettings) {
	*out = *in
	if in.ServiceAccessRoleARN != nil {
		in, out := &in.ServiceAccessRoleARN, &out.ServiceAccessRoleARN
		*out = new(string)
		**out = **in
	}
	if in.StreamARN != nil {
		in, out := &in.StreamARN, &out.StreamARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KinesisSettings.
func (in *KinesisSettings) DeepCopy() *KinesisSettings {
	if in == nil {
		return nil
	}
	out := new(KinesisSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicrosoftSQLServerSettings) DeepCopyInto(out *MicrosoftSQLServerSettings) {
	*out = *in
	if in.BcpPacketSize != nil {
		in, out := &in.BcpPacketSize, &out.BcpPacketSize
		*out = new(int64)
		**out = **in
	}
	if in.ControlTablesFileGroup != nil {
		in, out := &in.ControlTablesFileGroup, &out.ControlTablesFileGroup
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.SecretsManagerAccessRoleARN != nil {
		in, out := &in.SecretsManagerAccessRoleARN, &out.SecretsManagerAccessRoleARN
		*out = new(string)
		**out = **in
	}
	if in.SecretsManagerSecretID != nil {
		in, out := &in.SecretsManagerSecretID, &out.SecretsManagerSecretID
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicrosoftSQLServerSettings.
func (in *MicrosoftSQLServerSettings) DeepCopy() *MicrosoftSQLServerSettings {
	if in == nil {
		return nil
	}
	out := new(MicrosoftSQLServerSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBSettings) DeepCopyInto(out *MongoDBSettings) {
	*out = *in
	if in.AuthSource != nil {
		in, out := &in.AuthSource, &out.AuthSource
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DocsToInvestigate != nil {
		in, out := &in.DocsToInvestigate, &out.DocsToInvestigate
		*out = new(string)
		**out = **in
	}
	if in.ExtractDocID != nil {
		in, out := &in.ExtractDocID, &out.ExtractDocID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.SecretsManagerAccessRoleARN != nil {
		in, out := &in.SecretsManagerAccessRoleARN, &out.SecretsManagerAccessRoleARN
		*out = new(string)
		**out = **in
	}
	if in.SecretsManagerSecretID != nil {
		in, out := &in.SecretsManagerSecretID, &out.SecretsManagerSecretID
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBSettings.
func (in *MongoDBSettings) DeepCopy() *MongoDBSettings {
	if in == nil {
		return nil
	}
	out := new(MongoDBSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSettings) DeepCopyInto(out *MySQLSettings) {
	*out = *in
	if in.AfterConnectScript != nil {
		in, out := &in.AfterConnectScript, &out.AfterConnectScript
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.EventsPollInterval != nil {
		in, out := &in.EventsPollInterval, &out.EventsPollInterval
		*out = new(int64)
		**out = **in
	}
	if in.MaxFileSize != nil {
		in, out := &in.MaxFileSize, &out.MaxFileSize
		*out = new(int64)
		**out = **in
	}
	if in.ParallelLoadThreads != nil {
		in, out := &in.ParallelLoadThreads, &out.ParallelLoadThreads
		*out = new(int64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.SecretsManagerAccessRoleARN != nil {
		in, out := &in.SecretsManagerAccessRoleARN, &out.SecretsManagerAccessRoleARN
		*out = new(string)
		**out = **in
	}
	if in.SecretsManagerSecretID != nil {
		in, out := &in.SecretsManagerSecretID, &out.SecretsManagerSecretID
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.ServerTimezone != nil {
		in, out := &in.ServerTimezone, &out.ServerTimezone
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSettings.
func (in *MySQLSettings) DeepCopy() *MySQLSettings {
	if in == nil {
		return nil
	}
	out := new(MySQLSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NeptuneSettings) DeepCopyInto(out *NeptuneSettings) {
	*out = *in
	if in.ErrorRetryDuration != nil {
		in, out := &in.ErrorRetryDuration, &out.ErrorRetryDuration
		*out = new(int64)
		**out = **in
	}
	if in.MaxFileSize != nil {
		in, out := &in.MaxFileSize, &out.MaxFileSize
		*out = new(int64)
		**out = **in
	}
	if in.MaxRetryCount != nil {
		in, out := &in.MaxRetryCount, &out.MaxRetryCount
		*out = new(int64)
		**out = **in
	}
	if in.S3BucketFolder != nil {
		in, out := &in.S3BucketFolder, &out.S3BucketFolder
		*out = new(string)
		**out = **in
	}
	if in.S3BucketName != nil {
		in, out := &in.S3BucketName, &out.S3BucketName
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccessRoleARN != nil {
		in, out := &in.ServiceAccessRoleARN, &out.ServiceAccessRoleARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NeptuneSettings.
func (in *NeptuneSettings) DeepCopy() *NeptuneSettings {
	if in == nil {
		return nil
	}
	out := new(NeptuneSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSettings) DeepCopyInto(out *OracleSettings) {
	*out = *in
	if in.AdditionalArchivedLogDestID != nil {
		in, out := &in.AdditionalArchivedLogDestID, &out.AdditionalArchivedLogDestID
		*out = new(int64)
		**out = **in
	}
	if in.ArchivedLogDestID != nil {
		in, out := &in.ArchivedLogDestID, &out.ArchivedLogDestID
		*out = new(int64)
		**out = **in
	}
	if in.AsmServer != nil {
		in, out := &in.AsmServer, &out.AsmServer
		*out = new(string)
		**out = **in
	}
	if in.AsmUser != nil {
		in, out := &in.AsmUser, &out.AsmUser
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.NumberDatatypeScale != nil {
		in, out := &in.NumberDatatypeScale, &out.NumberDatatypeScale
		*out = new(int64)
		**out = **in
	}
	if in.OraclePathPrefix != nil {
		in, out := &in.OraclePathPrefix, &out.OraclePathPrefix
		*out = new(string)
		**out = **in
	}
	if in.ParallelAsmReadThreads != nil {
		in, out := &in.ParallelAsmReadThreads, &out.ParallelAsmReadThreads
		*out = new(int64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.ReadAheadBlocks != nil {
		in, out := &in.ReadAheadBlocks, &out.ReadAheadBlocks
		*out = new(int64)
		**out = **in
	}
	if in.RetryInterval != nil {
		in, out := &in.RetryInterval, &out.RetryInterval
		*out = new(int64)
		**out = **in
	}
	if in.SecretsManagerAccessRoleARN != nil {
		in, out := &in.SecretsManagerAccessRoleARN, &out.SecretsManagerAccessRoleARN
		*out = new(string)
		**out = **in
	}
	if in.SecretsManagerOracleAsmAccessRoleARN != nil {
		in, out := &in.SecretsManagerOracleAsmAccessRoleARN, &out.SecretsManagerOracleAsmAccessRoleARN
		*out = new(string)
		**out = **in
	}
	if in.SecretsManagerOracleAsmSecretID != nil {
		in, out := &in.SecretsManagerOracleAsmSecretID, &out.SecretsManagerOracleAsmSecretID
		*out = new(string)
		**out = **in
	}
	if in.SecretsManagerSecretID != nil {
		in, out := &in.SecretsManagerSecretID, &out.SecretsManagerSecretID
		*out = new(string)
		**out = **in
	}
	if in.SecurityDBEncryptionName != nil {
		in, out := &in.SecurityDBEncryptionName, &out.SecurityDBEncryptionName
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.UsePathPrefix != nil {
		in, out := &in.UsePathPrefix, &out.UsePathPrefix
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSettings.
func (in *OracleSettings) DeepCopy() *OracleSettings {
	if in == nil {
		return nil
	}
	out := new(OracleSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrderableReplicationInstance) DeepCopyInto(out *OrderableReplicationInstance) {
	*out = *in
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.ReplicationInstanceClass != nil {
		in, out := &in.ReplicationInstanceClass, &out.ReplicationInstanceClass
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrderableReplicationInstance.
func (in *OrderableReplicationInstance) DeepCopy() *OrderableReplicationInstance {
	if in == nil {
		return nil
	}
	out := new(OrderableReplicationInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PendingMaintenanceAction) DeepCopyInto(out *PendingMaintenanceAction) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.OptInStatus != nil {
		in, out := &in.OptInStatus, &out.OptInStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PendingMaintenanceAction.
func (in *PendingMaintenanceAction) DeepCopy() *PendingMaintenanceAction {
	if in == nil {
		return nil
	}
	out := new(PendingMaintenanceAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgreSQLSettings) DeepCopyInto(out *PostgreSQLSettings) {
	*out = *in
	if in.AfterConnectScript != nil {
		in, out := &in.AfterConnectScript, &out.AfterConnectScript
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DdlArtifactsSchema != nil {
		in, out := &in.DdlArtifactsSchema, &out.DdlArtifactsSchema
		*out = new(string)
		**out = **in
	}
	if in.ExecuteTimeout != nil {
		in, out := &in.ExecuteTimeout, &out.ExecuteTimeout
		*out = new(int64)
		**out = **in
	}
	if in.MaxFileSize != nil {
		in, out := &in.MaxFileSize, &out.MaxFileSize
		*out = new(int64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.SecretsManagerAccessRoleARN != nil {
		in, out := &in.SecretsManagerAccessRoleARN, &out.SecretsManagerAccessRoleARN
		*out = new(string)
		**out = **in
	}
	if in.SecretsManagerSecretID != nil {
		in, out := &in.SecretsManagerSecretID, &out.SecretsManagerSecretID
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.SlotName != nil {
		in, out := &in.SlotName, &out.SlotName
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgreSQLSettings.
func (in *PostgreSQLSettings) DeepCopy() *PostgreSQLSettings {
	if in == nil {
		return nil
	}
	out := new(PostgreSQLSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSettings) DeepCopyInto(out *RedshiftSettings) {
	*out = *in
	if in.AfterConnectScript != nil {
		in, out := &in.AfterConnectScript, &out.AfterConnectScript
		*out = new(string)
		**out = **in
	}
	if in.BucketFolder != nil {
		in, out := &in.BucketFolder, &out.BucketFolder
		*out = new(string)
		**out = **in
	}
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.ConnectionTimeout != nil {
		in, out := &in.ConnectionTimeout, &out.ConnectionTimeout
		*out = new(int64)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DateFormat != nil {
		in, out := &in.DateFormat, &out.DateFormat
		*out = new(string)
		**out = **in
	}
	if in.FileTransferUploadStreams != nil {
		in, out := &in.FileTransferUploadStreams, &out.FileTransferUploadStreams
		*out = new(int64)
		**out = **in
	}
	if in.LoadTimeout != nil {
		in, out := &in.LoadTimeout, &out.LoadTimeout
		*out = new(int64)
		**out = **in
	}
	if in.MaxFileSize != nil {
		in, out := &in.MaxFileSize, &out.MaxFileSize
		*out = new(int64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.ReplaceChars != nil {
		in, out := &in.ReplaceChars, &out.ReplaceChars
		*out = new(string)
		**out = **in
	}
	if in.ReplaceInvalidChars != nil {
		in, out := &in.ReplaceInvalidChars, &out.ReplaceInvalidChars
		*out = new(string)
		**out = **in
	}
	if in.SecretsManagerAccessRoleARN != nil {
		in, out := &in.SecretsManagerAccessRoleARN, &out.SecretsManagerAccessRoleARN
		*out = new(string)
		**out = **in
	}
	if in.SecretsManagerSecretID != nil {
		in, out := &in.SecretsManagerSecretID, &out.SecretsManagerSecretID
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.ServerSideEncryptionKMSKeyID != nil {
		in, out := &in.ServerSideEncryptionKMSKeyID, &out.ServerSideEncryptionKMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccessRoleARN != nil {
		in, out := &in.ServiceAccessRoleARN, &out.ServiceAccessRoleARN
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.WriteBufferSize != nil {
		in, out := &in.WriteBufferSize, &out.WriteBufferSize
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSettings.
func (in *RedshiftSettings) DeepCopy() *RedshiftSettings {
	if in == nil {
		return nil
	}
	out := new(RedshiftSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RefreshSchemasStatus) DeepCopyInto(out *RefreshSchemasStatus) {
	*out = *in
	if in.EndpointARN != nil {
		in, out := &in.EndpointARN, &out.EndpointARN
		*out = new(string)
		**out = **in
	}
	if in.LastFailureMessage != nil {
		in, out := &in.LastFailureMessage, &out.LastFailureMessage
		*out = new(string)
		**out = **in
	}
	if in.ReplicationInstanceARN != nil {
		in, out := &in.ReplicationInstanceARN, &out.ReplicationInstanceARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RefreshSchemasStatus.
func (in *RefreshSchemasStatus) DeepCopy() *RefreshSchemasStatus {
	if in == nil {
		return nil
	}
	out := new(RefreshSchemasStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationInstance) DeepCopyInto(out *ReplicationInstance) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.DNSNameServers != nil {
		in, out := &in.DNSNameServers, &out.DNSNameServers
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.PreferredMaintenanceWindow != nil {
		in, out := &in.PreferredMaintenanceWindow, &out.PreferredMaintenanceWindow
		*out = new(string)
		**out = **in
	}
	if in.ReplicationInstanceARN != nil {
		in, out := &in.ReplicationInstanceARN, &out.ReplicationInstanceARN
		*out = new(string)
		**out = **in
	}
	if in.ReplicationInstanceClass != nil {
		in, out := &in.ReplicationInstanceClass, &out.ReplicationInstanceClass
		*out = new(string)
		**out = **in
	}
	if in.ReplicationInstanceIdentifier != nil {
		in, out := &in.ReplicationInstanceIdentifier, &out.ReplicationInstanceIdentifier
		*out = new(string)
		**out = **in
	}
	if in.ReplicationInstancePrivateIPAddress != nil {
		in, out := &in.ReplicationInstancePrivateIPAddress, &out.ReplicationInstancePrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.ReplicationInstancePublicIPAddress != nil {
		in, out := &in.ReplicationInstancePublicIPAddress, &out.ReplicationInstancePublicIPAddress
		*out = new(string)
		**out = **in
	}
	if in.ReplicationInstanceStatus != nil {
		in, out := &in.ReplicationInstanceStatus, &out.ReplicationInstanceStatus
		*out = new(string)
		**out = **in
	}
	if in.ReplicationSubnetGroup != nil {
		in, out := &in.ReplicationSubnetGroup, &out.ReplicationSubnetGroup
		*out = new(ReplicationSubnetGroup_SDK)
		(*in).DeepCopyInto(*out)
	}
	if in.SecondaryAvailabilityZone != nil {
		in, out := &in.SecondaryAvailabilityZone, &out.SecondaryAvailabilityZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationInstance.
func (in *ReplicationInstance) DeepCopy() *ReplicationInstance {
	if in == nil {
		return nil
	}
	out := new(ReplicationInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationInstanceTaskLog) DeepCopyInto(out *ReplicationInstanceTaskLog) {
	*out = *in
	if in.ReplicationTaskARN != nil {
		in, out := &in.ReplicationTaskARN, &out.ReplicationTaskARN
		*out = new(string)
		**out = **in
	}
	if in.ReplicationTaskName != nil {
		in, out := &in.ReplicationTaskName, &out.ReplicationTaskName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationInstanceTaskLog.
func (in *ReplicationInstanceTaskLog) DeepCopy() *ReplicationInstanceTaskLog {
	if in == nil {
		return nil
	}
	out := new(ReplicationInstanceTaskLog)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationPendingModifiedValues) DeepCopyInto(out *ReplicationPendingModifiedValues) {
	*out = *in
	if in.AllocatedStorage != nil {
		in, out := &in.AllocatedStorage, &out.AllocatedStorage
		*out = new(int64)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.ReplicationInstanceClass != nil {
		in, out := &in.ReplicationInstanceClass, &out.ReplicationInstanceClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationPendingModifiedValues.
func (in *ReplicationPendingModifiedValues) DeepCopy() *ReplicationPendingModifiedValues {
	if in == nil {
		return nil
	}
	out := new(ReplicationPendingModifiedValues)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationSubnetGroup) DeepCopyInto(out *ReplicationSubnetGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationSubnetGroup.
func (in *ReplicationSubnetGroup) DeepCopy() *ReplicationSubnetGroup {
	if in == nil {
		return nil
	}
	out := new(ReplicationSubnetGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReplicationSubnetGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationSubnetGroupList) DeepCopyInto(out *ReplicationSubnetGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ReplicationSubnetGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationSubnetGroupList.
func (in *ReplicationSubnetGroupList) DeepCopy() *ReplicationSubnetGroupList {
	if in == nil {
		return nil
	}
	out := new(ReplicationSubnetGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReplicationSubnetGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationSubnetGroupObservation) DeepCopyInto(out *ReplicationSubnetGroupObservation) {
	*out = *in
	if in.SubnetGroupStatus != nil {
		in, out := &in.SubnetGroupStatus, &out.SubnetGroupStatus
		*out = new(string)
		**out = **in
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*Subnet, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Subnet)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationSubnetGroupObservation.
func (in *ReplicationSubnetGroupObservation) DeepCopy() *ReplicationSubnetGroupObservation {
	if in == nil {
		return nil
	}
	out := new(ReplicationSubnetGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationSubnetGroupParameters) DeepCopyInto(out *ReplicationSubnetGroupParameters) {
	*out = *in
	if in.ReplicationSubnetGroupDescription != nil {
		in, out := &in.ReplicationSubnetGroupDescription, &out.ReplicationSubnetGroupDescription
		*out = new(string)
		**out = **in
	}
	if in.ReplicationSubnetGroupIdentifier != nil {
		in, out := &in.ReplicationSubnetGroupIdentifier, &out.ReplicationSubnetGroupIdentifier
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDs != nil {
		in, out := &in.SubnetIDs, &out.SubnetIDs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	in.CustomReplicationSubnetGroupParameters.DeepCopyInto(&out.CustomReplicationSubnetGroupParameters)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationSubnetGroupParameters.
func (in *ReplicationSubnetGroupParameters) DeepCopy() *ReplicationSubnetGroupParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicationSubnetGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationSubnetGroupSpec) DeepCopyInto(out *ReplicationSubnetGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationSubnetGroupSpec.
func (in *ReplicationSubnetGroupSpec) DeepCopy() *ReplicationSubnetGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ReplicationSubnetGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationSubnetGroupStatus) DeepCopyInto(out *ReplicationSubnetGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationSubnetGroupStatus.
func (in *ReplicationSubnetGroupStatus) DeepCopy() *ReplicationSubnetGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ReplicationSubnetGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationSubnetGroup_SDK) DeepCopyInto(out *ReplicationSubnetGroup_SDK) {
	*out = *in
	if in.ReplicationSubnetGroupDescription != nil {
		in, out := &in.ReplicationSubnetGroupDescription, &out.ReplicationSubnetGroupDescription
		*out = new(string)
		**out = **in
	}
	if in.ReplicationSubnetGroupIdentifier != nil {
		in, out := &in.ReplicationSubnetGroupIdentifier, &out.ReplicationSubnetGroupIdentifier
		*out = new(string)
		**out = **in
	}
	if in.SubnetGroupStatus != nil {
		in, out := &in.SubnetGroupStatus, &out.SubnetGroupStatus
		*out = new(string)
		**out = **in
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*Subnet, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Subnet)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationSubnetGroup_SDK.
func (in *ReplicationSubnetGroup_SDK) DeepCopy() *ReplicationSubnetGroup_SDK {
	if in == nil {
		return nil
	}
	out := new(ReplicationSubnetGroup_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationTask) DeepCopyInto(out *ReplicationTask) {
	*out = *in
	if in.CdcStartPosition != nil {
		in, out := &in.CdcStartPosition, &out.CdcStartPosition
		*out = new(string)
		**out = **in
	}
	if in.CdcStopPosition != nil {
		in, out := &in.CdcStopPosition, &out.CdcStopPosition
		*out = new(string)
		**out = **in
	}
	if in.LastFailureMessage != nil {
		in, out := &in.LastFailureMessage, &out.LastFailureMessage
		*out = new(string)
		**out = **in
	}
	if in.RecoveryCheckpoint != nil {
		in, out := &in.RecoveryCheckpoint, &out.RecoveryCheckpoint
		*out = new(string)
		**out = **in
	}
	if in.ReplicationInstanceARN != nil {
		in, out := &in.ReplicationInstanceARN, &out.ReplicationInstanceARN
		*out = new(string)
		**out = **in
	}
	if in.ReplicationTaskARN != nil {
		in, out := &in.ReplicationTaskARN, &out.ReplicationTaskARN
		*out = new(string)
		**out = **in
	}
	if in.ReplicationTaskIdentifier != nil {
		in, out := &in.ReplicationTaskIdentifier, &out.ReplicationTaskIdentifier
		*out = new(string)
		**out = **in
	}
	if in.ReplicationTaskSettings != nil {
		in, out := &in.ReplicationTaskSettings, &out.ReplicationTaskSettings
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointARN != nil {
		in, out := &in.SourceEndpointARN, &out.SourceEndpointARN
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StopReason != nil {
		in, out := &in.StopReason, &out.StopReason
		*out = new(string)
		**out = **in
	}
	if in.TableMappings != nil {
		in, out := &in.TableMappings, &out.TableMappings
		*out = new(string)
		**out = **in
	}
	if in.TargetEndpointARN != nil {
		in, out := &in.TargetEndpointARN, &out.TargetEndpointARN
		*out = new(string)
		**out = **in
	}
	if in.TargetReplicationInstanceARN != nil {
		in, out := &in.TargetReplicationInstanceARN, &out.TargetReplicationInstanceARN
		*out = new(string)
		**out = **in
	}
	if in.TaskData != nil {
		in, out := &in.TaskData, &out.TaskData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationTask.
func (in *ReplicationTask) DeepCopy() *ReplicationTask {
	if in == nil {
		return nil
	}
	out := new(ReplicationTask)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationTaskAssessmentResult) DeepCopyInto(out *ReplicationTaskAssessmentResult) {
	*out = *in
	if in.AssessmentResults != nil {
		in, out := &in.AssessmentResults, &out.AssessmentResults
		*out = new(string)
		**out = **in
	}
	if in.AssessmentResultsFile != nil {
		in, out := &in.AssessmentResultsFile, &out.AssessmentResultsFile
		*out = new(string)
		**out = **in
	}
	if in.AssessmentStatus != nil {
		in, out := &in.AssessmentStatus, &out.AssessmentStatus
		*out = new(string)
		**out = **in
	}
	if in.ReplicationTaskARN != nil {
		in, out := &in.ReplicationTaskARN, &out.ReplicationTaskARN
		*out = new(string)
		**out = **in
	}
	if in.ReplicationTaskIdentifier != nil {
		in, out := &in.ReplicationTaskIdentifier, &out.ReplicationTaskIdentifier
		*out = new(string)
		**out = **in
	}
	if in.S3ObjectURL != nil {
		in, out := &in.S3ObjectURL, &out.S3ObjectURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationTaskAssessmentResult.
func (in *ReplicationTaskAssessmentResult) DeepCopy() *ReplicationTaskAssessmentResult {
	if in == nil {
		return nil
	}
	out := new(ReplicationTaskAssessmentResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationTaskAssessmentRun) DeepCopyInto(out *ReplicationTaskAssessmentRun) {
	*out = *in
	if in.AssessmentRunName != nil {
		in, out := &in.AssessmentRunName, &out.AssessmentRunName
		*out = new(string)
		**out = **in
	}
	if in.LastFailureMessage != nil {
		in, out := &in.LastFailureMessage, &out.LastFailureMessage
		*out = new(string)
		**out = **in
	}
	if in.ReplicationTaskARN != nil {
		in, out := &in.ReplicationTaskARN, &out.ReplicationTaskARN
		*out = new(string)
		**out = **in
	}
	if in.ReplicationTaskAssessmentRunARN != nil {
		in, out := &in.ReplicationTaskAssessmentRunARN, &out.ReplicationTaskAssessmentRunARN
		*out = new(string)
		**out = **in
	}
	if in.ResultEncryptionMode != nil {
		in, out := &in.ResultEncryptionMode, &out.ResultEncryptionMode
		*out = new(string)
		**out = **in
	}
	if in.ResultKMSKeyARN != nil {
		in, out := &in.ResultKMSKeyARN, &out.ResultKMSKeyARN
		*out = new(string)
		**out = **in
	}
	if in.ResultLocationBucket != nil {
		in, out := &in.ResultLocationBucket, &out.ResultLocationBucket
		*out = new(string)
		**out = **in
	}
	if in.ResultLocationFolder != nil {
		in, out := &in.ResultLocationFolder, &out.ResultLocationFolder
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccessRoleARN != nil {
		in, out := &in.ServiceAccessRoleARN, &out.ServiceAccessRoleARN
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationTaskAssessmentRun.
func (in *ReplicationTaskAssessmentRun) DeepCopy() *ReplicationTaskAssessmentRun {
	if in == nil {
		return nil
	}
	out := new(ReplicationTaskAssessmentRun)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationTaskIndividualAssessment) DeepCopyInto(out *ReplicationTaskIndividualAssessment) {
	*out = *in
	if in.IndividualAssessmentName != nil {
		in, out := &in.IndividualAssessmentName, &out.IndividualAssessmentName
		*out = new(string)
		**out = **in
	}
	if in.ReplicationTaskAssessmentRunARN != nil {
		in, out := &in.ReplicationTaskAssessmentRunARN, &out.ReplicationTaskAssessmentRunARN
		*out = new(string)
		**out = **in
	}
	if in.ReplicationTaskIndividualAssessmentARN != nil {
		in, out := &in.ReplicationTaskIndividualAssessmentARN, &out.ReplicationTaskIndividualAssessmentARN
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationTaskIndividualAssessment.
func (in *ReplicationTaskIndividualAssessment) DeepCopy() *ReplicationTaskIndividualAssessment {
	if in == nil {
		return nil
	}
	out := new(ReplicationTaskIndividualAssessment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePendingMaintenanceActions) DeepCopyInto(out *ResourcePendingMaintenanceActions) {
	*out = *in
	if in.ResourceIdentifier != nil {
		in, out := &in.ResourceIdentifier, &out.ResourceIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePendingMaintenanceActions.
func (in *ResourcePendingMaintenanceActions) DeepCopy() *ResourcePendingMaintenanceActions {
	if in == nil {
		return nil
	}
	out := new(ResourcePendingMaintenanceActions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Settings) DeepCopyInto(out *S3Settings) {
	*out = *in
	if in.BucketFolder != nil {
		in, out := &in.BucketFolder, &out.BucketFolder
		*out = new(string)
		**out = **in
	}
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.CdcPath != nil {
		in, out := &in.CdcPath, &out.CdcPath
		*out = new(string)
		**out = **in
	}
	if in.CsvDelimiter != nil {
		in, out := &in.CsvDelimiter, &out.CsvDelimiter
		*out = new(string)
		**out = **in
	}
	if in.CsvNoSupValue != nil {
		in, out := &in.CsvNoSupValue, &out.CsvNoSupValue
		*out = new(string)
		**out = **in
	}
	if in.CsvRowDelimiter != nil {
		in, out := &in.CsvRowDelimiter, &out.CsvRowDelimiter
		*out = new(string)
		**out = **in
	}
	if in.DataPageSize != nil {
		in, out := &in.DataPageSize, &out.DataPageSize
		*out = new(int64)
		**out = **in
	}
	if in.DictPageSizeLimit != nil {
		in, out := &in.DictPageSizeLimit, &out.DictPageSizeLimit
		*out = new(int64)
		**out = **in
	}
	if in.ExternalTableDefinition != nil {
		in, out := &in.ExternalTableDefinition, &out.ExternalTableDefinition
		*out = new(string)
		**out = **in
	}
	if in.RowGroupLength != nil {
		in, out := &in.RowGroupLength, &out.RowGroupLength
		*out = new(int64)
		**out = **in
	}
	if in.ServerSideEncryptionKMSKeyID != nil {
		in, out := &in.ServerSideEncryptionKMSKeyID, &out.ServerSideEncryptionKMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccessRoleARN != nil {
		in, out := &in.ServiceAccessRoleARN, &out.ServiceAccessRoleARN
		*out = new(string)
		**out = **in
	}
	if in.TimestampColumnName != nil {
		in, out := &in.TimestampColumnName, &out.TimestampColumnName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Settings.
func (in *S3Settings) DeepCopy() *S3Settings {
	if in == nil {
		return nil
	}
	out := new(S3Settings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet) DeepCopyInto(out *Subnet) {
	*out = *in
	if in.SubnetAvailabilityZone != nil {
		in, out := &in.SubnetAvailabilityZone, &out.SubnetAvailabilityZone
		*out = new(AvailabilityZone)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIdentifier != nil {
		in, out := &in.SubnetIdentifier, &out.SubnetIdentifier
		*out = new(string)
		**out = **in
	}
	if in.SubnetStatus != nil {
		in, out := &in.SubnetStatus, &out.SubnetStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet.
func (in *Subnet) DeepCopy() *Subnet {
	if in == nil {
		return nil
	}
	out := new(Subnet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupportedEndpointType) DeepCopyInto(out *SupportedEndpointType) {
	*out = *in
	if in.EngineDisplayName != nil {
		in, out := &in.EngineDisplayName, &out.EngineDisplayName
		*out = new(string)
		**out = **in
	}
	if in.EngineName != nil {
		in, out := &in.EngineName, &out.EngineName
		*out = new(string)
		**out = **in
	}
	if in.ReplicationInstanceEngineMinimumVersion != nil {
		in, out := &in.ReplicationInstanceEngineMinimumVersion, &out.ReplicationInstanceEngineMinimumVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupportedEndpointType.
func (in *SupportedEndpointType) DeepCopy() *SupportedEndpointType {
	if in == nil {
		return nil
	}
	out := new(SupportedEndpointType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SybaseSettings) DeepCopyInto(out *SybaseSettings) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.SecretsManagerAccessRoleARN != nil {
		in, out := &in.SecretsManagerAccessRoleARN, &out.SecretsManagerAccessRoleARN
		*out = new(string)
		**out = **in
	}
	if in.SecretsManagerSecretID != nil {
		in, out := &in.SecretsManagerSecretID, &out.SecretsManagerSecretID
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SybaseSettings.
func (in *SybaseSettings) DeepCopy() *SybaseSettings {
	if in == nil {
		return nil
	}
	out := new(SybaseSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableStatistics) DeepCopyInto(out *TableStatistics) {
	*out = *in
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TableState != nil {
		in, out := &in.TableState, &out.TableState
		*out = new(string)
		**out = **in
	}
	if in.ValidationState != nil {
		in, out := &in.ValidationState, &out.ValidationState
		*out = new(string)
		**out = **in
	}
	if in.ValidationStateDetails != nil {
		in, out := &in.ValidationStateDetails, &out.ValidationStateDetails
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableStatistics.
func (in *TableStatistics) DeepCopy() *TableStatistics {
	if in == nil {
		return nil
	}
	out := new(TableStatistics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableToReload) DeepCopyInto(out *TableToReload) {
	*out = *in
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableToReload.
func (in *TableToReload) DeepCopy() *TableToReload {
	if in == nil {
		return nil
	}
	out := new(TableToReload)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tag) DeepCopyInto(out *Tag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tag.
func (in *Tag) DeepCopy() *Tag {
	if in == nil {
		return nil
	}
	out := new(Tag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCSecurityGroupMembership) DeepCopyInto(out *VPCSecurityGroupMembership) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.VPCSecurityGroupID != nil {
		in, out := &in.VPCSecurityGroupID, &out.VPCSecurityGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCSecurityGroupMembership.
func (in *VPCSecurityGroupMembership) DeepCopy() *VPCSecurityGroupMembership {
	if in == nil {
		return nil
	}
	out := new(VPCSecurityGroupMembership)
	in.DeepCopyInto(out)
	return out
}
